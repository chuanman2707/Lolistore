{"ast":null,"code":"import _defineProperty from \"E:\\\\dev\\\\lolistore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:\\\\dev\\\\lolistore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\dev\\\\lolistore\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.action\";\nimport { SignUpContainer, TitleContainer } from \"./sign-up.styles\";\nimport { connect } from \"react-redux\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        credential = _useState2[0],\n        setCredential = _useState2[1];\n\n  const displayName = credential.displayName,\n        email = credential.email,\n        password = credential.password,\n        confirmPassword = credential.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password doesn't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setCredential(_objectSpread({}, credential, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(TitleContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredential => dispatch(signUpStart(userCredential))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["E:\\dev\\lolistore\\client\\src\\components\\sign-up\\sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","SignUpContainer","TitleContainer","connect","SignUp","displayName","email","password","confirmPassword","credential","setCredential","handleSubmit","event","preventDefault","alert","handleChange","e","target","name","value","mapDispatchToProps","dispatch","userCredential"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\n\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { signUpStart } from \"../../redux/user/user.action\";\r\n\r\nimport { SignUpContainer, TitleContainer } from \"./sign-up.styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [credential, setCredential] = useState({\r\n    displayName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = credential;\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      alert(\"Password doesn't match\");\r\n      return;\r\n    }\r\n    signUpStart({ displayName, email, password });\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setCredential({ ...credential, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <TitleContainer>I do not have an account</TitleContainer>\r\n      <span>Sign up with your email and password</span>\r\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          value={displayName}\r\n          onChange={handleChange}\r\n          label=\"Display name\"\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          label=\"Email\"\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n          label=\"password\"\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          label=\"Confirm Password\"\r\n          required\r\n        />\r\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: userCredential => dispatch(signUpStart(userCredential))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}