{"ast":null,"code":"import _defineProperty from \"E:\\\\dev\\\\lolistore\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from \"./user.action\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const snapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: snapshot.id\n    }, snapshot.data)));\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* isAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (e) {\n    yield put(signInFailure(e.message));\n  }\n}\nexport function* isSignout() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (e) {\n    yield put(signOutFailure(e.message));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (e) {\n    yield put(signUpFailure(e.message));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGNUP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGNUP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignout() {\n  yield takeLatest(UserActionTypes.SIGNOUT_START, isSignout);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isAuthenticated);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignout), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["E:\\dev\\lolistore\\client\\src\\redux\\user\\user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","additionalData","userRef","snapshot","get","id","data","err","message","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isAuthenticated","e","isSignout","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onSignUpStart","SIGNUP_START","onSignUpSuccess","SIGNUP_SUCCESS","onSignout","SIGNOUT_START","onCheckUserSession","CHECK_USER_SESSION","onGoogleSignInStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\n\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport {\r\n  signInSuccess,\r\n  signInFailure,\r\n  signOutFailure,\r\n  signOutSuccess,\r\n  signUpFailure,\r\n  signUpSuccess\r\n} from \"./user.action\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n  try {\r\n    const userRef = yield call(\r\n      createUserProfileDocument,\r\n      userAuth,\r\n      additionalData\r\n    );\r\n    const snapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: snapshot.id, ...snapshot.data }));\r\n  } catch (err) {\r\n    yield put(signInFailure(err.message));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (err) {\r\n    yield put(signInFailure(err.message));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (err) {\r\n    yield put(signInFailure(err.message));\r\n  }\r\n}\r\n\r\nexport function* isAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (e) {\r\n    yield put(signInFailure(e.message));\r\n  }\r\n}\r\n\r\nexport function* isSignout() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (e) {\r\n    yield put(signOutFailure(e.message));\r\n  }\r\n}\r\n\r\nexport function* signUp({ payload: { email, password, displayName } }) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n  } catch (e) {\r\n    yield put(signUpFailure(e.message));\r\n  }\r\n}\r\n\r\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\r\n  yield getSnapshotFromUserAuth(user, additionalData);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(UserActionTypes.SIGNUP_START, signUp);\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n  yield takeLatest(UserActionTypes.SIGNUP_SUCCESS, signInAfterSignUp);\r\n}\r\n\r\nexport function* onSignout() {\r\n  yield takeLatest(UserActionTypes.SIGNOUT_START, isSignout);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isAuthenticated);\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignout),\r\n    call(onSignUpStart),\r\n    call(onSignUpSuccess)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}